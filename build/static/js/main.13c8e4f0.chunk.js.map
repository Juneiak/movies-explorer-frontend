{"version":3,"sources":["components/navigation/navigation.jsx","components/account/account.jsx","components/button/button.jsx","utils/custom-hooks/use-window-dimensions.js","contexts/current-user-context.js","contexts/popups-context.js","contexts/card-action-context.js","components/header/header.jsx","components/footer/footer.jsx","components/movies-card-list/movies-card-list.jsx","components/movies-card/movies-card.jsx","images/search-icon.svg","components/filter-check-box/filter-check-box.jsx","components/search-form/search-from.jsx","components/preloader/preloader.jsx","components/input-container/input-container.jsx","components/question-link/question-link.jsx","images/logo.svg","components/simple-window-title/simple-window-title.jsx","components/slide-menu/slide-menu-link.jsx","components/slide-menu/slide-menu.jsx","components/not-loggedin-popup/not-loggedin-popup.jsx","utils/custom-hooks/use-form.js","pages/login/login-page.jsx","utils/app-utils/app-utils.js","pages/movies/movies-page.jsx","pages/saved-movies/saved-movies-page.jsx","pages/register/register-page.jsx","pages/profile/profile-page.jsx","pages/not-found/not-found-page.jsx","utils/api/api-utils.js","utils/custom-local-storge/expirig-local-storge.js","components/hocs/protected-route.jsx","app/app.jsx","utils/api/main-api.js","utils/api/movies-api.js","reportWebVitals.js","index.jsx"],"names":["Navigation","className","to","activeClassName","Account","Button","size","text","onButtonClick","buttonType","active","onClick","type","disabled","getWindowDimensions","window","height","innerHeight","width","innerWidth","useWindowDimensions","React","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","CurrentUserContext","createContext","PopupsContext","CardActionContext","Header","currentUser","useContext","isLoggedIn","email","mainPageMatch","useRouteMatch","isExact","history","useHistory","setIsSlideMenuOpen","push","Footer","href","target","rel","MoviesCardList","children","onMoreButtonClick","buttonStatus","MoviesCard","deleteCardHandler","isSavedMovieCard","cardData","country","director","duration","year","description","image","trailer","nameRU","nameEN","thumbnail","movieId","handledDurationHour","Math","floor","handledDurationMin","isLiked","setIsLiked","addMovieHandler","deleteMovieHandler","likedMoviesIdList","setIsNotLoggedInPopupOpen","includes","then","deletedCard","catch","err","console","error","alt","src","FilterCheckBox","toggleFilter","isActive","checked","onChange","SearchForm","onSearchButtonClick","isSearched","searchText","setSearchText","isShortFilm","setIsShortFilm","shortFilmSearchHandler","finderImage","evt","value","minLength","required","placeholder","Preloader","InputContainer","inputTitle","inputValue","inputType","inputPlaceholder","isRequired","inputName","inputErrors","maxLength","isInputActive","inputOnChange","name","String","QuestionLink","question","linkText","linkTo","SimpleWindowTitle","title","logo","SlideMenuLink","linkName","onLinkClick","exact","popupsRoot","document","querySelector","SlideMenu","isOpen","setIsOpen","closeSlideMenu","setTimeout","ReactDOM","createPortal","NotLoggedInPopup","reactDOM","useFormWithValidation","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","validationMessage","closest","checkValidity","LoginPage","onSigninButtonClick","loginError","setLoginError","isLoading","setIsLoading","handleInputChange","signinEmail","signinPassword","toFilter","data","searchParams","filterRegex","RegExp","toLowerCase","filter","item","test","MoviesPage","getAllMoviesHandler","filteredMovies","setFilterdMovies","nothingFound","setNothingFound","isError","setIsError","numberOfElements","setNumberOfElements","isMoreButtonActive","setIsMoreButtonActive","setMovies","listOfMovies","length","savedFilteredMovies","JSON","parse","localStorage","getItem","allMovies","setItem","stringify","slice","map","index","SavedMoviesPage","getUserMoviesHandler","movie","allSavedMovies","RegisterPage","onSignupButtonClick","registerError","setRegisterError","signupName","signupEmail","signupPassword","ProfilePage","onSignoutButtonClick","onUpdateButtonClick","updateError","setUpdateError","isValidForUpdate","profileEmail","profileName","resetProfileForm","NotFoundPage","goBack","mainApiUrl","checkStatus","res","ok","json","Promise","reject","status","message","setExpiringItemToLS","key","nowTime","Date","now","itemWithExprie","expiredTime","getExpiringItemFromLS","parsedItem","Number","removeItem","ProtectedRoute","Component","component","path","props","isAuthLoaded","App","setIsAuthLoaded","isSlideMenuOpen","isNotLoggedInPopupOpen","setCurrentUser","setLikedMoviesIdList","fetch","method","credentials","userMoviesData","savedMovies","resolve","moviesList","handledMoviesList","url","trailerLink","formats","id","setLoadedUser","user","getUserDataHandler","savedUser","currentUserData","signinHandler","password","headers","body","signIn","log","Provider","newMovieData","movieData","createdMovieData","deleteMovieFromUserList","deletedMovieData","updateUserData","updatedCurrentUserData","signUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13c8e4f0.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './navigation.css';\n\nconst Navigation = () => {\n  return (\n    <nav className='navigation'>\n      <ul className='navigation__links-list'>\n        <li className='navigation__list-element'>\n          <NavLink\n            to='/'\n            className='app__link app__link-animation navigation__link'\n            activeClassName='app__link_active'\n          >\n            Фильмы\n          </NavLink>\n        </li>\n        <li className='navigation__list-element'>\n          <NavLink\n            to='/saved-movies'\n            className='app__link app__link-animation navigation__link'\n            activeClassName='app__link_active'\n          >\n            Сохранённые фильмы\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './account.css';\nimport { Link } from 'react-router-dom';\n\nconst Account = () => {\n  return (\n    <Link to='/profile' className='account'>\n      <p className='account__button-text'>Аккаунт</p>\n      <div className='account__icon' />\n    </Link>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport './button.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({\n  size,\n  text = '',\n  onButtonClick,\n  buttonType = 'button',\n  active=false\n}) => {\n  // size = 'big'/'small'\n  return (\n    <button\n      className={`\n      button\n      ${size === 'small' ? 'button_type_basic-small' : 'button_type_basic-big'}\n      ${active && 'button_active'}\n      `}\n      onClick={onButtonClick}\n      type={buttonType}\n      disabled={!active}\n    >\n      {text}\n    </button>\n  );\n};\nButton.propTypes = {\n  size: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onButtonClick: PropTypes.func,\n  buttonType: PropTypes.string,\n};\nexport default Button;\n","import React from 'react';\n\nconst getWindowDimensions = () => {\n  const { innerHeight: height, innerWidth: width } = window;\n  return { width, height };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = React.useState(getWindowDimensions());\n\n  React.useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => { return window.removeEventListener('resize', handleResize); };\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;\n","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;\n","import React from 'react';\n\nconst PopupsContext = React.createContext();\n\nexport default PopupsContext;\n","import React from 'react';\n\nconst CardActionContext = React.createContext();\n\nexport default CardActionContext;\n","import React from 'react';\nimport { Link, useRouteMatch, useHistory } from 'react-router-dom';\nimport Navigation from '../navigation/navigation';\nimport Account from '../account/account';\nimport Button from '../button/button';\nimport './header.css';\nimport useWindowDimensions from '../../utils/custom-hooks/use-window-dimensions';\nimport { PopupsContext, CurrentUserContext } from '../../contexts/index';\n\nconst Header = () => {\n  const { currentUser } = React.useContext(CurrentUserContext);\n  const isLoggedIn = currentUser?.email\n  const { width } = useWindowDimensions();\n  const { isExact: mainPageMatch } = useRouteMatch('/');\n  const history = useHistory();\n  const { setIsSlideMenuOpen } = React.useContext(PopupsContext);\n\n  const burgerClickHandler = () => {\n    setIsSlideMenuOpen(true);\n  };\n\n  const onSigninClick = () => {\n    history.push('/signin');\n  };\n\n  return (\n    <header className={`\n    header\n    ${mainPageMatch && 'header_position_main'}\n    `}\n    >\n      <div className='header__content'>\n        <Link className='header__logo-link' to='/' />\n        {isLoggedIn && width > 780 && <Navigation />}\n        <div className='headar__menu'>\n          {isLoggedIn && width > 780 && <Account />}\n          {isLoggedIn && width < 780 && <button onClick={burgerClickHandler} className='header__burger' />}\n          {!isLoggedIn\n            && (\n            <div className='header__auth'>\n              <Link to='/signup' className='app__link-animation header__link'>Регестрация</Link>\n              <Button active onButtonClick={onSigninClick} buttonType='button' size='small' text='Войти' />\n            </div>\n            )}\n        </div>\n      </div>\n\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className='footer'>\n      <div className='footer__content'>\n        <p className='footer__author'>Учебный проект Яндекс.Практикум х BeatFilm.</p>\n        <div className='footer__misc'>\n          <span className='footer__year'>&copy; 2021</span>\n          <ul className='footer__links-list'>\n            <li className='footer__list-element'><a href='https://practicum.yandex.ru/' target='_blank' className='app__link app__link-animation footer__link' rel='noopener noreferrer'>Яндекс.Практикум</a></li>\n            <li className='footer__list-element'><a href='https://github.com/' target='_blank' className='app__link app__link-animation footer__link' rel='noopener noreferrer'>Github</a></li>\n            <li className='footer__list-element'><a href='https://ru-ru.facebook.com/' target='_blank' className='app__link app__link-animation footer__link' rel='noopener noreferrer'>Facebook</a></li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './movies-card-list.css';\n\nconst MoviesCardList = ({ children, onMoreButtonClick=function(){}, buttonStatus }) => {\n\n  return (\n    <section className='movies-card-list'>\n      <div className='movies-card-list__container'>\n        <ul className='movies-card-list__list'>\n          { children }\n        </ul>\n        {buttonStatus && <button onClick={onMoreButtonClick} type='button' className='movies-card-list__more-button'>Ещё</button>}\n      </div>\n    </section>\n  );\n};\n\nexport default MoviesCardList;\n","import React from 'react';\nimport './movies-card.css';\nimport PropTypes from 'prop-types';\nimport { CardActionContext, CurrentUserContext, PopupsContext } from '../../contexts/index';\n\nconst MoviesCard = ({\n  deleteCardHandler=function(){},\n  isSavedMovieCard=false,\n  cardData: {\n    country,\n    director,\n    duration,\n    year,\n    description,\n    image,\n    trailer,\n    nameRU,\n    nameEN,\n    thumbnail,\n    movieId,\n  }}) => {\n  const handledDurationHour = Math.floor(duration / 60);\n  const handledDurationMin = duration % 60;\n  \n  const [isLiked, setIsLiked] = React.useState(false);\n\n  const { addMovieHandler, deleteMovieHandler, likedMoviesIdList } = React.useContext(CardActionContext);\n  const { currentUser } = React.useContext(CurrentUserContext)\n  const { setIsNotLoggedInPopupOpen } = React.useContext(PopupsContext);\n\n  const handleRemove = () => {\n    deleteMovieHandler(movieId)\n      .then((deletedCard) => deleteCardHandler(deletedCard.movieId))\n      .catch((err) => console.error(`delete card action error in movies card - ${err}`))\n  }\n  const handleAdd = () => addMovieHandler({\n    country,\n    director,\n    duration,\n    year,\n    description,\n    image,\n    trailer,\n    nameRU,\n    nameEN,\n    thumbnail,\n    movieId,\n  });\n\n  const handleLikeClick = () => {\n    if (!currentUser.email) {\n      setIsNotLoggedInPopupOpen(true)\n      return\n    }\n    if (isLiked) {\n      deleteMovieHandler(movieId)\n        .then(() => setIsLiked(false))\n        .catch((err) => console.error(`unlike action error in movies card - ${err}`))\n      ;\n    } else {\n      handleAdd()\n        .then(() => setIsLiked(true))\n        .catch((err) => console.error(`like action error in movies card - ${err}`))\n    }\n  }\n\n  React.useEffect(() => {\n    if (likedMoviesIdList.includes(movieId)) setIsLiked(true);\n  }, [likedMoviesIdList])\n\n  return (\n    <li className='movies-card'>\n      <div className='movies-card__info'>\n        <p className='movies-card__title'>{nameRU}</p>\n        <span className='movies-card__duration'>{`${handledDurationHour}ч ${handledDurationMin}м`}</span>\n        {isSavedMovieCard\n          ? <button type='button' onClick={handleRemove} className='movies-card__delete-button' />\n          : <button\n              type='button'\n              onClick={handleLikeClick}\n              className={`movies-card__like-button ${isLiked && 'movies-card__like-button_active'}`}\n            />}\n      </div>\n      <img className='movies-card__card-image' alt='фото карточки' src={image} />\n    </li>\n  );\n};\n\nexport default MoviesCard;\n","export default __webpack_public_path__ + \"static/media/search-icon.658eea3a.svg\";","import React from 'react';\nimport './filter-check-box.css';\n\nconst FilterCheckBox = ({ toggleFilter, isActive }) => {\n  return (\n    <label className='filter-check-box'>\n      <input checked={isActive} onChange={toggleFilter} className='filter-check-box__input' type='checkbox' />\n      <div className='filter-check-box__pseudo' />\n      <div className='filter-check-box__dot' />\n    </label>\n  );\n};\n\nexport default FilterCheckBox;\n","import React from 'react';\nimport './search-from.css';\nimport finderImage from '../../images/search-icon.svg';\nimport FilterCheckBox from '../filter-check-box/filter-check-box';\nimport useWindowDimensions from '../../utils/custom-hooks/use-window-dimensions';\n\nconst SearchForm = ({ onSearchButtonClick, isSearched }) => {\n  const { width } = useWindowDimensions();\n  const [ searchText, setSearchText ] = React.useState('');\n  const [ isShortFilm, setIsShortFilm ] = React.useState(false);\n\n  const handleTextChange = (evt) => setSearchText(evt.target.value);\n  \n  const handleSearch = () => {\n    onSearchButtonClick(searchText, isShortFilm);\n  }\n\n  const shortFilmSearchHandler = () => {\n    setIsShortFilm(!isShortFilm);\n    if (isSearched) onSearchButtonClick(searchText, !isShortFilm);\n  }\n  return (\n    <section className='search-form'>\n      <div className='search-form__container'>\n        <form className='search-form__form'>\n          <fieldset className='search-form__text-input-container'>\n            <img className='search-form__lupa' src={finderImage} alt='лупа для поиска' />\n            <div className='search-form__search-input'>\n              <input\n                onChange={handleTextChange}\n                className='search-form__text-input'\n                value={searchText}\n                type='text'\n                minLength='1'\n                required\n                placeholder='Фильм'\n              />\n              <span className='search-form__error' />\n            </div>\n            <button type='button' onClick={handleSearch} className='search-form__search-button'>Найти</button>\n          </fieldset>\n          {width > 600\n            && (\n            <div className='search-form__checkbox-container'>\n              <FilterCheckBox isActive={isShortFilm} toggleFilter={shortFilmSearchHandler}/>\n              <span className='search-form__checkbox-title'>Короткометражки</span>\n            </div>\n            )}\n        </form>\n        {width < 600\n          && (\n          <div className='search-form__checkbox-container'>\n            <FilterCheckBox isActive={isShortFilm} toggleFilter={shortFilmSearchHandler}/>\n            <span className='search-form__checkbox-title'>Короткометражки</span>\n          </div>\n          )}\n      </div>\n    </section>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport './preloader.css';\n\nconst Preloader = () => {\n  return (\n    <div className='preloader'>\n      <div className='preloader__container'>\n        <span className='preloader__round' />\n      </div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React from 'react';\nimport './input-container.css';\nimport PropTypes from 'prop-types';\n\nconst InputContainer = ({\n  inputTitle = 'emptyName',\n  inputValue = '',\n  inputType = 'text',\n  inputPlaceholder = '',\n  isRequired = false,\n  inputName,\n  inputErrors,\n  maxLength = '',\n  minLength = '',\n  isInputActive = true,\n  inputOnChange = () => {},\n}) => {\n  return (\n    <div className='input-container'>\n      <span className='input-container__name'>{inputTitle}</span>\n      <input\n        className='input-container__input'\n        value={inputValue}\n        type={inputType}\n        placeholder={inputPlaceholder}\n        required={isRequired}\n        onChange={inputOnChange}\n        name={inputName}\n        minLength={String(minLength)}\n        maxLength={String(maxLength)}\n        disabled={!isInputActive}\n      />\n      {inputErrors && <span className='input-container__error'>{inputErrors}</span>}\n    </div>\n  );\n};\n\nInputContainer.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  inputValue: PropTypes.string,\n  inputType: PropTypes.string.isRequired,\n  inputPlaceholder: PropTypes.string,\n  isRequired: PropTypes.bool.isRequired,\n  inputOnChange: PropTypes.func,\n};\n\nexport default InputContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './question-link.css';\n\nconst QuestionLink = ({ question, linkText, linkTo }) => {\n  return (\n    <div className='question-link'>\n      <p className='question-link__question'>{question}</p>\n      <Link className='app__link app__link-animation question-link__link' to={linkTo}>{linkText}</Link>\n    </div>\n  );\n};\n\nQuestionLink.propTypes = {\n  question: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  linkTo: PropTypes.string.isRequired,\n};\n\nexport default QuestionLink;\n","export default __webpack_public_path__ + \"static/media/logo.fe4adf65.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './simple-window-title.css';\nimport { Link } from 'react-router-dom';\nimport logo from '../../images/logo.svg';\n\nconst SimpleWindowTitle = ({ title }) => {\n  return (\n    <div className='simple-window-title'>\n      <Link to='/'>\n        <img className='simple-window-title__logo' alt='Логотип сайта' src={logo} />\n      </Link>\n      <p className='simple-window-title__title'>{title}</p>\n    </div>\n  );\n};\nSimpleWindowTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SimpleWindowTitle;\n","import React from 'react';\nimport './slide-menu-link.css';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst SlideMenuLink = ({ linkTo, linkName, onLinkClick }) => {\n\n  return (\n    <li className='slide-menu-link'>\n      <NavLink\n        to={linkTo}\n        exact\n        onClick={() => onLinkClick()}\n        className='slide-menu-link__link'\n        activeClassName='slide-menu-link__link_active'\n      >\n        {linkName}\n      </NavLink>\n    </li>\n  );\n};\n\nSlideMenuLink.propTypes = {\n  linkTo: PropTypes.string.isRequired,\n  linkName: PropTypes.string.isRequired,\n  onLinkClick: PropTypes.func,\n};\nexport default SlideMenuLink;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './slide-menu.css';\nimport Account from '../account/account';\nimport SlideMenuLink from './slide-menu-link';\nimport PopupsContext from '../../contexts/popups-context';\n\nconst popupsRoot = document.querySelector('#popupsRoot');\n\nconst SlideMenu = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {setIsSlideMenuOpen} = React.useContext(PopupsContext);\n\n  React.useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  const closeSlideMenu = () => {\n    setIsOpen(false);\n    setTimeout(() => {\n      setIsSlideMenuOpen(false);\n    }, 300);\n  };\n\n  return ReactDOM.createPortal((\n    <section onClick={closeSlideMenu} className={`slide-menu ${isOpen && 'slide-menu_opened'}`}>\n      <div className={`slide-menu__container ${isOpen && 'slide-menu__container_opened'}`}>\n        <button onClick={closeSlideMenu} type='button' className='slide-menu__close-button'></button>\n        <div className='slide-menu__content'>\n          <nav className='slide-menu__navigation'>\n            <ul className='slide-menu__nav-list'>\n              <SlideMenuLink onLinkClick={closeSlideMenu} linkName='Фильмы' linkTo='/' />\n              <SlideMenuLink onLinkClick={closeSlideMenu} linkName='Сохранённые фильмы' linkTo='/saved-movies' />\n            </ul>\n          </nav>\n          <Account />\n        </div>\n      </div>\n    </section>\n  ), popupsRoot);\n};\n\nexport default SlideMenu;\n","import React from 'react';\nimport './not-loggedin-popup.css';\nimport Button from '../button/button';\nimport { useHistory } from 'react-router-dom';\nimport { PopupsContext } from '../../contexts';\nimport reactDOM from 'react-dom';\n\nconst popupsRoot = document.querySelector('#popupsRoot')\n\nconst NotLoggedInPopup = () => {\n  const history = useHistory();\n  const { setIsNotLoggedInPopupOpen } = React.useContext(PopupsContext);\n\n  const onSigninClick = () => {\n    setIsNotLoggedInPopupOpen(false)\n    history.push(('/signin'))\n  }\n  return reactDOM.createPortal((\n    <section className='not-loggedin-popup'>\n      <div className=\"not-loggedin-popup__container\">\n        <button onClick={() => setIsNotLoggedInPopupOpen(false)} type='button' className='not-loggedin-popup__close-button'></button>\n        <div className=\"not-loggedin-popup__content\">\n          <span className=\"not-loggedin-popup__message\">Вы не авторизованы для выполнения данного действия</span>\n          <Button active={true} text='Войти' onButtonClick={onSigninClick} size='big' />\n        </div>\n      </div>\n    </section>\n  ), popupsRoot)\n};\n\nexport default NotLoggedInPopup;\n","import React from 'react';\n\nconst useForm = () => {\n  const [values, setValues] = React.useState({});\n\n  const handleChange = (evt) => {\n    const value = evt.target.value;\n    const name = evt.target.name;\n\n    setValues({ ...values, [name]: value });\n  }\n\n  return {values, setValues, handleChange};\n};\n\nconst useFormWithValidation = () => {\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  const handleChange = (evt) => {\n    const target = evt.target;\n    const name = target.name;\n    setValues({ ...values, [name]: target.value });\n    setErrors({ ...errors, [name]: target.validationMessage });\n    setIsValid(target.closest('form').checkValidity());\n  };\n\n  const resetForm = React.useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    }\n  )\n\n  return { isValid, values, errors, resetForm, handleChange };\n}\n\n\n\nexport { useForm, useFormWithValidation };\n","import React from 'react';\nimport {\n  InputContainer, SimpleWindowTitle, Button, QuestionLink,\n} from '../../components/index';\nimport './login-page.css';\nimport { useFormWithValidation } from '../../utils/custom-hooks/use-form';\n\nconst LoginPage = ({ onSigninButtonClick }) => {\n  const [loginError, setLoginError] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { isValid, values, errors, resetForm, handleChange } = useFormWithValidation();\n\n  const handleSignin = () => {\n    setIsLoading(true)\n    onSigninButtonClick(values.signinEmail, values.signinPassword)\n      .then(() => {\n        resetForm()\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setLoginError(err)\n        setIsLoading(false);\n      })\n  };\n\n  const handleInputChange = (evt) => {\n    handleChange(evt);\n    setLoginError('');\n  };\n\n  return (\n    <main className='login-page'>\n      <section className='login-page__content'>\n        <SimpleWindowTitle title='Добро пожаловать!' />\n        <form className='login-page__form'>\n          <fieldset className='login-page__inputs'>\n            <InputContainer\n              inputTitle='E-mail'\n              inputValue={values.signinEmail}\n              inputType='email'\n              isRequired\n              inputName='signinEmail'\n              inputOnChange={handleInputChange}\n              inputErrors={errors.signinEmail}\n              isInputActive={!isLoading}\n            />\n            <InputContainer\n              inputTitle='Пароль'\n              inputValue={values.signinPassword}\n              inputType='password'\n              inputPlaceholder='Ваш пароль'\n              isRequired\n              minLength={6}\n              inputName='signinPassword'\n              inputOnChange={handleInputChange}\n              inputErrors={errors.signinPassword}\n              isInputActive={!isLoading}\n            />\n          </fieldset>\n          <div className='login-page__button-container'>\n            <p className='login-page__error'>{loginError}</p>\n            <Button active={isValid && !isLoading} onButtonClick={handleSignin} buttonType='button' size='big' text='Войти' />\n          </div>\n        </form>\n        <QuestionLink question='Ещё не зарегистрированы?' linkText='Регистрация' linkTo='/signup' />\n      </section>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","const toFilter = (data, searchParams) => {\n  const filterRegex = new RegExp(searchParams.searchText.toLowerCase());\n  if (searchParams.isShortFilm) return data.filter(item => {\n    if (item.duration <= 40) return filterRegex.test(item.nameRU.toLowerCase())\n    else return false\n  })\n  else return data.filter(item => filterRegex.test(item.nameRU.toLowerCase()))\n};\n\n\nconst normalizeMoviesApiData = (unhandledMoviesList) => unhandledMoviesList.map((movie) => ({\n  country: movie.country,\n  director: movie.director,\n  duration: movie.duration,\n  year: movie.year,\n  description: movie.description,\n  image: `https://api.nomoreparties.co${movie.image.url}`,\n  trailer: movie.trailerLink,\n  nameRU: movie.nameRU,\n  nameEN: movie.nameEN,\n  thumbnail: `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`,\n  movieId: movie.id,\n}))\n\nexport { toFilter, normalizeMoviesApiData };\n\n","import React from 'react';\nimport './movies-page.css';\nimport {\n  Header, Footer, SearchForm, MoviesCardList, MoviesCard, Preloader,\n} from '../../components/index';\nimport { toFilter } from '../../utils/app-utils/app-utils';\n\nconst MoviesPage = ({ getAllMoviesHandler }) => {\n\n  const [filteredMovies, setFilterdMovies] = React.useState([]);\n  const [nothingFound, setNothingFound] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n\n  const [numberOfElements, setNumberOfElements] = React.useState(5);\n  const [isMoreButtonActive, setIsMoreButtonActive] = React.useState(false);\n\n  const setMovies = (listOfMovies=[]) => {\n    setFilterdMovies(listOfMovies);\n    if (listOfMovies.length < 1) setNothingFound(true);\n    else setNothingFound(false)\n    if (listOfMovies.length <= 5) setIsMoreButtonActive(false);\n    else setIsMoreButtonActive(true);\n  };\n\n  const SearchHandler = (searchText, isShortFilm) => {\n    setIsLoading(true);\n    getAllMoviesHandler()\n      .then((allMovies) => {\n        const filteredMovies = toFilter(allMovies, {searchText, isShortFilm});\n        localStorage.setItem('filteredMovies', JSON.stringify(filteredMovies))\n        setMovies(filteredMovies);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setIsError(true);\n      })\n  }\n\n  const moreHandler = () => {\n    if (filteredMovies.length > numberOfElements) setNumberOfElements(numberOfElements + 5);\n  }\n\n  React.useEffect(() => {\n    if (numberOfElements >= filteredMovies.length) setIsMoreButtonActive(false);\n  }, [numberOfElements]);\n\n  React.useEffect(() => {\n    const savedFilteredMovies = JSON.parse(localStorage.getItem('filteredMovies'));\n    if (savedFilteredMovies) setMovies(savedFilteredMovies);\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className='movies-page'>\n        <SearchForm onSearchButtonClick={SearchHandler} isSearched={!!filteredMovies.length} />\n        {isError \n        ? <h2 className='movies-page__get-movies-error'>Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз</h2>\n        : (isLoading \n          ? <Preloader />\n          : (nothingFound\n            ? <h2 className='movies-page__nothing-found'>Ничего не найдено</h2>\n            : \n            <MoviesCardList onMoreButtonClick={moreHandler}  buttonStatus={isMoreButtonActive}>\n              {filteredMovies.slice(0, numberOfElements).map((item, index) => (\n                <MoviesCard cardData={item} key={index} />\n              ))}\n            </MoviesCardList>\n            )\n          )\n        }\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import React from 'react';\nimport './saved-movies-page.css';\nimport {\n  Header, Footer, SearchForm, MoviesCardList, MoviesCard, Preloader,\n} from '../../components/index';\nimport { toFilter } from '../../utils/app-utils/app-utils';\n\nconst SavedMoviesPage = ({ getUserMoviesHandler }) => {\n\n  const [filteredMovies, setFilterdMovies] = React.useState([]);\n  const [nothingFound, setNothingFound] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n\n  const SearchHandler = (searchText, isShortFilm) => {\n    setIsLoading(true);\n    getUserMoviesHandler()\n      .then((allSavedMovies) => {\n        const filteredMovies = toFilter(allSavedMovies, {searchText, isShortFilm});\n        setFilterdMovies(filteredMovies);\n        if (filteredMovies.length < 1) setNothingFound(true);\n        else setNothingFound(false)\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setIsError(true);\n      })\n  }\n  \n  const deleteCardHandler = (movieId) => setFilterdMovies(filteredMovies.filter((movie) => movie.movieId !== movieId))\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    getUserMoviesHandler()\n      .then((allSavedMovies) => {\n        const filteredMovies = toFilter(allSavedMovies, { searchText: '', isShortFilm: false });\n        setFilterdMovies(filteredMovies);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setIsError(true);\n      })\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className='saved-movies-page'>\n        <SearchForm onSearchButtonClick={SearchHandler} isSearched={!!filteredMovies.length} />\n        {isError \n        ? <h2 className='saved-movies-page__get-movies-error'>Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз</h2>\n        : (isLoading \n          ? <Preloader />\n          : (nothingFound\n            ? <h2 className='saved-movies-page__nothing-found'>Ничего не найдено</h2>\n            : \n            <MoviesCardList buttonStatus={false}>\n              {filteredMovies.map((item) => (\n                <MoviesCard deleteCardHandler={deleteCardHandler} cardData={item} key={item.movieId} isSavedMovieCard/>\n              ))}\n            </MoviesCardList>\n            )\n          )\n        }\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default SavedMoviesPage;\n","import React from 'react';\nimport {\n  InputContainer, SimpleWindowTitle, Button, QuestionLink,\n} from '../../components/index';\nimport './register-page.css';\nimport { useFormWithValidation } from '../../utils/custom-hooks/use-form';\n\nconst RegisterPage = ({ onSignupButtonClick }) => {\n  const [registerError, setRegisterError] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { isValid, values, errors, resetForm, handleChange } = useFormWithValidation();\n\n  const handleSignup = () => {\n    setIsLoading(true);\n    onSignupButtonClick(values.signupName, values.signupEmail, values.signupPassword)\n      .then(() => {\n        resetForm();\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setRegisterError(err);\n        setIsLoading(false);\n      })\n  };\n\n  const handleInputChange = (evt) => {\n    handleChange(evt);\n    setRegisterError('');\n  };\n\n  return (\n    <main className='register-page'>\n      <section className='register-page__content'>\n        <SimpleWindowTitle title='Добро пожаловать!' />\n        <form className='register-page__form'>\n          <fieldset className='register-page__inputs'>\n            <InputContainer\n              inputTitle='Имя'\n              inputValue={values.signupName}\n              inputType='text'\n              isRequired\n              inputOnChange={handleInputChange}\n              inputName='signupName'\n              inputErrors={errors.signupName}\n              maxLength={30}\n              minLength={2}\n              isInputActive={!isLoading}\n              inputPlaceholder='валидация: русские буквы, первая заглавная'\n            />\n            <InputContainer\n              inputTitle='E-mail'\n              inputValue={values.signupEmail}\n              inputType='email'\n              isRequired\n              inputOnChange={handleInputChange}\n              inputName='signupEmail'\n              inputErrors={errors.signupEmail}\n              isInputActive={!isLoading}\n              inputPlaceholder='Ваша почта'\n            />\n            <InputContainer\n              inputTitle='Пароль'\n              inputValue={values.signupPassword}\n              inputType='password'\n              inputPlaceholder='Ваш пароль'\n              isRequired\n              minLength={6}\n              inputOnChange={handleInputChange}\n              inputName='signupPassword'\n              inputErrors={errors.signupPassword}\n              isInputActive={!isLoading}\n            />\n          </fieldset>\n          <div className='register-page__button-container'>\n            <p className='register-page__error'>{registerError}</p>\n            <Button active={isValid && !isLoading} onButtonClick={handleSignup} buttonType='button' size='big' text='Зарегистрироваться' />\n          </div>\n        </form>\n        <QuestionLink question='Уже зарегистрированы?' linkText='Войти' linkTo='/signin' />\n      </section>\n    </main>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport { Header } from '../../components/index';\nimport './profile-page.css';\nimport { CurrentUserContext } from '../../contexts';\nimport { useFormWithValidation } from '../../utils/custom-hooks/use-form';\n\nconst ProfilePage = ({ onSignoutButtonClick, onUpdateButtonClick }) => {\n  const [updateError, setUpdateError] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { currentUser } = React.useContext(CurrentUserContext);\n  const { isValid, values, errors, resetForm, handleChange } = useFormWithValidation();\n\n  const isValidForUpdate = isValid && (currentUser.email !== values.profileEmail || currentUser.name !== values.profileName)\n  \n  const resetProfileForm = () => resetForm({\n    profileName: currentUser.name,\n    profileEmail: currentUser.email,\n  });\n\n  React.useEffect(() => {\n    resetProfileForm();\n  }, [currentUser]);\n\n  const handleUpdateUserData = () => {\n    if (isValidForUpdate) {\n      setIsLoading(true);\n      onUpdateButtonClick(values.profileName, values.profileEmail)\n      .then(() => setIsLoading(false))\n        .catch((err) => {\n          resetProfileForm();\n          setUpdateError(err);\n          setIsLoading(false)\n        } )\n    }\n  };\n\n  const handleInputChange = (evt) => {\n    handleChange(evt);\n    setUpdateError('');\n  };\n\n  return (\n    <>\n      <Header />\n      <main className='profile-page'>\n        <section className='profile-page__content'>\n          <h1 className='profile-page__title'>{`Привет, ${currentUser.name}!`}</h1>\n          <form className='profile-page__form'>\n            <div className='profile-page__values'>\n              <div className='profile-page__value-container'>\n                <span className='profile-page__var'>Имя</span>\n                <input\n                  type='text'\n                  onChange={handleInputChange}\n                  value={values.profileName}\n                  required\n                  minLength='2'\n                  maxLength='30'\n                  className='profile-page__value'\n                  name='profileName'\n                  disabled={isLoading}\n                />\n                <span className='profile-page__input-error'>{errors.profileName}</span>\n              </div>\n              <div className='profile-page__value-container'>\n                <span className='profile-page__var'>E-mail</span>\n                <input\n                type='email'\n                onChange={handleInputChange}\n                value={values.profileEmail}\n                required\n                className='profile-page__value'\n                name='profileEmail'\n                disabled={isLoading}\n                />\n                <span className='profile-page__input-error'>{errors.profileEmail}</span>\n              </div>\n            </div>\n            <div className='profile-page__buttons'>\n              <p className='profile-page__update-error'>{updateError}</p>\n              <button\n                type='button'\n                onClick={handleUpdateUserData}\n                disabled={!isValidForUpdate || isLoading}\n                className={`\n                  app__link\n                  app__link-animation\n                  profile-page__button\n                  profile-page__button_edit\n                  ${!isValidForUpdate && 'profile-page__button_inactive'}\n                `}\n              >Редактировать</button>\n              <button\n                type='button'\n                onClick={onSignoutButtonClick}\n                className='\n                  app__link\n                  app__link-animation\n                  profile-page__button\n                  profile-page__button_signout\n                '>Выйти из аккаунта</button>\n            </div>\n          </form>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './not-found-page.css';\n\nconst NotFoundPage = () => {\n\n  const history = useHistory();\n  const goBackHandle = () => {\n    history.goBack();\n  }\n\n  return (\n    <main className='not-found-page'>\n      <h1 className='not-found-page__title'>404</h1>\n      <p className='not-found-page__subtitile'>Страница не найдена</p>\n      <button onClick={goBackHandle} type='button' className='not-found-page__back-button'>Назад</button>\n    </main>\n  );\n};\n\nexport default NotFoundPage;\n","const mainApiUrl = 'https://api.juneiak.movieproject.nomoredomains.monster';\nconst moviesApiUrl = 'https://api.nomoreparties.co/beatfilm-movies';\n\nconst checkStatus = (res) => {\n  if (res.ok) return res.json()\n  return Promise.reject(`FetchError: ${res.status} - ${res.message}`);\n}\n\n\nexport { checkStatus, mainApiUrl, moviesApiUrl };\n","const setExpiringItemToLS = (key, item, duration) => {\n  const nowTime = Date.now();\n\n  const itemWithExprie = {\n    value: JSON.stringify(item),\n    expiredTime: nowTime + duration,\n  }\n  localStorage.setItem(key, JSON.stringify(itemWithExprie));\n};\n\nconst getExpiringItemFromLS = (key) => {\n  const item = localStorage.getItem(key);\n  if (!item) return null;\n  \n  const nowTime = Date.now();\n  const parsedItem = JSON.parse(item);\n  if (nowTime > Number(parsedItem.expiredTime)) {\n    localStorage.removeItem(key);\n    return null;\n  }\n  return JSON.parse(parsedItem.value);\n};\n\nexport { setExpiringItemToLS, getExpiringItemFromLS };\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { CurrentUserContext } from '../../contexts/index';\nimport { Preloader } from '../index';\n\nconst ProtectedRoute = ({ component: Component, path, exact, ...props }) => {\n  const { isAuthLoaded, currentUser } = React.useContext(CurrentUserContext);\n  \n  return (\n    <Route exact={exact} path={path}>\n      { !isAuthLoaded\n      ? < Preloader />\n      : currentUser.email\n      ? <Component {...props} />\n      : <Redirect to='/' />\n    }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\nimport {\n  MoviesPage,\n  LoginPage,\n  RegisterPage,\n  SavedMoviesPage,\n  ProfilePage,\n  NotFoundPage,\n} from '../pages';\nimport {\n  signIn,\n  signOut,\n  signUp,\n  getUserData,\n  updateUserData,\n  addMovieToUsersList,\n  getSavedMoviesData,\n  deleteMovieFromUserList,\n} from '../utils/api/main-api';\nimport {\n  PopupsContext,\n  CurrentUserContext,\n  CardActionContext\n} from '../contexts/index';\nimport {\n  setExpiringItemToLS,\n  getExpiringItemFromLS \n} from '../utils/custom-local-storge/expirig-local-storge';\nimport { getMoviesData } from '../utils/api/movies-api';\nimport { normalizeMoviesApiData } from '../utils/app-utils/app-utils';\nimport './app.css';\nimport ProtectedRoute from '../components/hocs/protected-route';\nimport { SlideMenu, NotLoggedInPopup } from '../components/index';\n\nfunction App() {\n\n  const [isAuthLoaded, setIsAuthLoaded] = React.useState(false);\n  const [isSlideMenuOpen, setIsSlideMenuOpen] = React.useState(false);\n  const [isNotLoggedInPopupOpen, setIsNotLoggedInPopupOpen] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  \n  const [likedMoviesIdList, setLikedMoviesIdList] = React.useState([]);\n\n  const history = useHistory();\n\n  const getUserMoviesHandler = () => (\n    getSavedMoviesData()\n    .then((userMoviesData) => {\n      setLikedMoviesIdList(userMoviesData.map((movie) => movie.movieId))\n      return userMoviesData;\n    })\n      .catch((err) => {\n        console.error(`get saved movies error in app - ${err.message}`);\n        return Promise.reject(err);\n      })\n  );\n\n  const addMovieHandler = (newMovieData) => (\n    addMovieToUsersList(newMovieData)\n      .then((createdMovieData) => getUserMoviesHandler()\n        .then(() => createdMovieData))\n      .catch((err) => {\n        console.error(`add movie to user list error in app - ${err}`);\n        return Promise.reject(err);\n      })\n  );\n  \n  const deleteMovieHandler = (movieId) => (\n    deleteMovieFromUserList(movieId)\n      .then((deletedMovieData) => getUserMoviesHandler()\n        .then(() => deletedMovieData))\n      .catch((err) => {\n        console.error(`delete movie to user list error in app - ${err}`);\n        return Promise.reject(err);\n      })\n  )\n\n  const getAllMoviesHandler = () => {\n    const savedMovies = getExpiringItemFromLS('allMovies');\n    if (savedMovies) return Promise.resolve(savedMovies);\n    return getMoviesData()\n      .then((moviesList) => {\n        const handledMoviesList = normalizeMoviesApiData(moviesList);\n        setExpiringItemToLS('allMovies', handledMoviesList, 1000 * 60 * 5);\n        return moviesList;\n      })\n      .catch((err) => {\n        console.error(err);\n        return Promise.reject(err);\n      })\n    };\n\n  const setLoadedUser = (user) => {\n    setCurrentUser(user);\n    setIsAuthLoaded(true);\n  };\n\n  const getUserDataHandler = () => {\n    setIsAuthLoaded(false);\n    const savedUser = getExpiringItemFromLS('user');\n    if (savedUser) {\n      setIsAuthLoaded(true);\n      setLoadedUser(savedUser);\n      return Promise.resolve(savedUser);\n    };\n    return getUserData()\n      .then((currentUserData) => {\n        setIsAuthLoaded(true);\n        setLoadedUser(currentUserData);\n        setExpiringItemToLS('user', currentUserData, 1000 * 60 * 5);\n        return currentUserData;\n      })\n      .catch((err) => {\n        setIsAuthLoaded(true);\n        setLoadedUser({});\n        return Promise.reject(err);\n      })\n  };\n\n  const signinHandler = (email, password) => (\n    signIn(email, password)\n      .then((res) => {\n        console.log(res.message);\n        getUserDataHandler()\n          .then(() => {\n            history.push('/')\n            return Promise.resolve('loggedIn')\n          })\n      })\n      .catch((err) => {\n        console.error(err);\n        return Promise.reject('Во время авторизации произошла ошибка. Подождите немного и попробуйте ещё раз')\n      })\n  );\n\n  const signupHandler = (name, email, password) => (\n    signUp(name, email, password)\n      .then((res) => {\n        console.log(res.message);\n        return signinHandler(email, password)\n        .then(() => {\n          return Promise.resolve('registered')\n        })\n      })\n      .catch((err) => {\n        console.error(err);\n        return Promise.reject('Во время регистрации произошла ошибка. Подождите немного и попробуйте ещё раз')\n\n      })\n  );\n\n  const signoutHandler = () => {\n    setIsAuthLoaded(false);\n    return signOut()\n    .then((res) => {\n      console.log(res.message);\n      setIsAuthLoaded(true);\n      localStorage.removeItem('user');\n      localStorage.removeItem('filteredMovies');\n      setLoadedUser({});\n      history.push('/');\n      return Promise.resolve('registered')\n    })\n    .catch((err) => {\n      setIsAuthLoaded(true);\n      console.error(err);\n      return Promise.reject('Не удалось выйти из аккаунта. Подождите немного и попробуйте ещё раз')\n    }) \n  };\n\n  const updateUserDataHandler = (name, email) => (\n    updateUserData(email, name)\n      .then((updatedCurrentUserData) => {\n        setExpiringItemToLS('user', updatedCurrentUserData, 1000 * 60 * 5);\n        setCurrentUser(updatedCurrentUserData);\n        return Promise.resolve(updatedCurrentUserData);\n      })\n      .catch((err) => {\n        console.error(err);\n        return Promise.reject('Не удалось обновить данные аккаунта. Подождите немного и попробуйте ещё раз');\n      })\n  );\n\n  React.useEffect(() => {\n    getUserDataHandler()\n      .then(() => {\n        getAllMoviesHandler();\n        getUserMoviesHandler();\n      })\n      .catch(err => console.error(err))\n  }, []);\n\n  return (\n    <div className='app'>\n      <CurrentUserContext.Provider value={{isAuthLoaded, currentUser}}>\n        <PopupsContext.Provider value={{setIsSlideMenuOpen, setIsNotLoggedInPopupOpen}}>\n          <CardActionContext.Provider value={{addMovieHandler, deleteMovieHandler, likedMoviesIdList}} >\n            <Switch>\n\n              <Route exact path='/'>\n                <MoviesPage getAllMoviesHandler={getAllMoviesHandler} />\n              </Route>\n\n              <ProtectedRoute\n              exact={true}\n              path='/saved-movies'\n              component={SavedMoviesPage}\n              getUserMoviesHandler={getUserMoviesHandler}\n              />\n              \n              <ProtectedRoute\n                exact={true}\n                path='/profile'\n                onSignoutButtonClick={signoutHandler}\n                onUpdateButtonClick={updateUserDataHandler}\n                component={ProfilePage}\n              />\n\n              <Route exact path='/signin'>\n                {currentUser?.email ? <Redirect to='/' /> : <LoginPage onSigninButtonClick={signinHandler}/> }\n              </Route>\n\n              <Route exact path='/signup'>\n                {currentUser?.email ? <Redirect to='/' /> : <RegisterPage  onSignupButtonClick={signupHandler} />}\n              </Route>\n\n              <Route path='*'>\n                <NotFoundPage />\n              </Route>\n\n            </Switch>\n\n            {isSlideMenuOpen\n            && <SlideMenu isOpen={isSlideMenuOpen} />}\n\n            {isNotLoggedInPopupOpen \n            && <NotLoggedInPopup />}\n\n          </CardActionContext.Provider>\n        </PopupsContext.Provider>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\nexport default App;\n","import { checkStatus, mainApiUrl } from './api-utils';\n\nconst signIn = (email, password) => (\n  fetch(`${mainApiUrl}/signin`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password })\n  })\n  .then(checkStatus)\n  .then((res) => {\n    return res;\n  })\n);\n\nconst signUp = (name, email, password) => (\n  fetch(`${mainApiUrl}/signup`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ name, email, password })\n  })\n  .then(checkStatus)\n  .then((res) => {\n    return res;\n  })\n);\n\nconst signOut = () => (\n  fetch(`${mainApiUrl}/signout`, {\n    method: 'GET',\n    credentials: 'include',\n  })\n  .then(checkStatus)\n  .then((res) => {\n    return res;\n  })\n);\n\nconst getUserData = () => (\n  fetch(`${mainApiUrl}/users/me`, {\n    method: 'GET',\n    credentials: 'include',\n  })\n  .then(checkStatus)\n);\n\nconst updateUserData = (email, name) => (\n  fetch(`${mainApiUrl}/users/me`, {\n    method: 'PATCH',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, name })\n  })\n  .then(checkStatus)\n);\n\nconst getSavedMoviesData = () => (\n  fetch(`${mainApiUrl}/movies`, {\n    method: 'GET',\n    credentials: 'include'\n  })\n  .then(checkStatus)\n);\n\nconst addMovieToUsersList = (movieData) => (\n  fetch(`${mainApiUrl}/movies`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(movieData)\n  })\n  .then(checkStatus)\n);\n\nconst deleteMovieFromUserList = (movieId) => (\n  fetch(`${mainApiUrl}/movies/${movieId}`, {\n    method: 'DELETE',\n    credentials: 'include'\n  })\n  .then(checkStatus)\n)\n\nexport {\n  updateUserData,\n  getUserData,\n  signIn,\n  signUp,\n  signOut,\n  addMovieToUsersList,\n  getSavedMoviesData,\n  deleteMovieFromUserList,\n};\n","import { checkStatus, moviesApiUrl } from './api-utils';\n\nconst getMoviesData = () => (\n  fetch(moviesApiUrl, {\n    method: 'GET'\n  })\n  .then(checkStatus)\n);\n\nexport { getMoviesData };\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}